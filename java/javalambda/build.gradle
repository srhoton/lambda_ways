plugins {
    id 'java'
    id 'com.diffplug.spotless' version '6.22.0'
    id 'jacoco'
}

group = 'com.steverhoton.poc'
version = '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
}

dependencies {
    // AWS Lambda dependencies
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.3'
    implementation 'com.amazonaws:aws-lambda-java-events:3.11.4'
    
    // AWS SDK v2
    implementation platform('software.amazon.awssdk:bom:2.21.21')
    implementation 'software.amazon.awssdk:lambda'
    
    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'com.amazonaws:aws-lambda-java-log4j2:1.6.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.21.1'
    
    // JSON processing
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.0'
    
    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
    testImplementation 'org.mockito:mockito-core:5.7.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.7.0'
    testImplementation 'org.assertj:assertj-core:3.24.2'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

// JaCoCo configuration
jacoco {
    toolVersion = "0.8.11"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.80
            }
        }
        rule {
            element = 'CLASS'
            excludes = ['*.Application', '*.Configuration']
            limit {
                minimum = 0.80
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification

// Build a zip file for Lambda deployment
task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

build.dependsOn buildZip

spotless {
    java {
        googleJavaFormat()
        importOrder 'java', 'javax', 'org', 'com', ''
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
    }
}

// Apply spotless formatting before compilation
compileJava.dependsOn 'spotlessApply'